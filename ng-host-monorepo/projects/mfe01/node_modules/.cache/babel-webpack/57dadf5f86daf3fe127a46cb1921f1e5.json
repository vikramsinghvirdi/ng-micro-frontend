{"ast":null,"code":"import { FocusTrapTrackerService as e } from \"../services/focus-trap-tracker.service.js\";\nimport { isFocusable as t, isHTMLElement as o } from \"./dom.js\";\nimport { createId as n } from \"./identity.js\";\n\nfunction s(t, o, n) {\n  const s = e.getCurrent() === o,\n        i = r(t, o);\n  s && i ? (n = n || o).focus() : t.focus();\n}\n\nfunction r(e, t) {\n  return e === t.topReboundElement || e === t.bottomReboundElement || !(t.contains(e) || null !== t.shadowRoot && t.shadowRoot.contains(e));\n}\n\nfunction i() {\n  const e = document.createElement(\"span\");\n  return e.setAttribute(\"tabindex\", \"0\"), e.classList.add(\"offscreen-focus-rebounder\"), e;\n}\n\nfunction u(e) {\n  if (e && !e.topReboundElement && !e.bottomReboundElement) {\n    e.topReboundElement = i(), e.bottomReboundElement = i();\n    const t = e.parentElement,\n          o = e.nextSibling;\n    t && (t.insertBefore(e.topReboundElement, e), o ? t.insertBefore(e.bottomReboundElement, o) : t.appendChild(e.bottomReboundElement));\n  }\n}\n\nfunction c(e) {\n  if (e) {\n    const t = e.parentElement;\n\n    if (t) {\n      const o = e.topReboundElement,\n            n = e.bottomReboundElement;\n      o && t.removeChild(o), n && t.removeChild(n);\n    }\n\n    delete e.topReboundElement, delete e.bottomReboundElement;\n  }\n}\n\nfunction m(e) {\n  return e;\n}\n\nclass a {\n  constructor(e) {\n    this.active = !1, (e = e).focusTrapId || (e.focusTrapId = n()), this.focusTrapElement = e;\n  }\n\n  enableFocusTrap() {\n    const n = this.focusTrapElement,\n          s = n.querySelector(\"[cds-first-focus]\"),\n          r = n.shadowRoot ? n.shadowRoot.querySelector(\".private-host[tabindex]\") : null,\n          i = document.activeElement;\n    if (e.getCurrent() === n) throw Error(\"Focus trap is already enabled for this instance.\");\n    this.firstFocusElement = s || r || this.focusTrapElement, u(n), t(n) || n.setAttribute(\"tabindex\", \"-1\"), i && o(i) && (this.previousFocus = i), e.setCurrent(n);\n    const c = setTimeout(() => {\n      this.firstFocusElement.focus(), clearTimeout(c);\n    }, 10);\n    this.onFocusInEvent = this.onFocusIn.bind(this), document.addEventListener(\"focusin\", this.onFocusInEvent), this.active = !0;\n  }\n\n  removeFocusTrap() {\n    document.removeEventListener(\"focusin\", this.onFocusInEvent), c(this.focusTrapElement), e.activatePreviousCurrent(), this.active = !1, this.previousFocus && this.previousFocus.focus();\n  }\n\n  onFocusIn(e) {\n    s(e.composedPath()[0], this.focusTrapElement, this.firstFocusElement);\n  }\n\n}\n\nexport { a as FocusTrap, u as addReboundElementsToFocusTrapElement, m as castHtmlElementToFocusTrapElement, i as createFocusTrapReboundElement, r as elementIsOutsideFocusTrapElement, s as refocusIfOutsideFocusTrapElement, c as removeReboundElementsFromFocusTrapElement }; //# sourceMappingURL=focus-trap.js.map","map":null,"metadata":{},"sourceType":"module"}