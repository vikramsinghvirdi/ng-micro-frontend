{"ast":null,"code":"import { decorateProperty as o } from \"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nfunction i(i, n) {\n  return o({\n    descriptor: o => {\n      const t = {\n        get() {\n          var o, n;\n          return null !== (n = null === (o = this.renderRoot) || void 0 === o ? void 0 : o.querySelector(i)) && void 0 !== n ? n : null;\n        },\n\n        enumerable: !0,\n        configurable: !0\n      };\n\n      if (n) {\n        const n = \"symbol\" == typeof o ? Symbol() : \"__\" + o;\n\n        t.get = function () {\n          var o, t;\n          return void 0 === this[n] && (this[n] = null !== (t = null === (o = this.renderRoot) || void 0 === o ? void 0 : o.querySelector(i)) && void 0 !== t ? t : null), this[n];\n        };\n      }\n\n      return t;\n    }\n  });\n}\n\nexport { i as query }; //# sourceMappingURL=query.js.map","map":null,"metadata":{},"sourceType":"module"}