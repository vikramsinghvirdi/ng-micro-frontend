{"ast":null,"code":"import { GlobalStateService as e } from \"./global.service.js\";\nconst n = {\n  alert: {\n    closeButtonAriaLabel: \"Close\",\n    loading: \"Loading\",\n    info: \"Info\",\n    success: \"Success\",\n    warning: \"Warning\",\n    danger: \"Error\"\n  },\n  dropdown: {\n    open: \"Open\"\n  },\n  file: {\n    browse: \"browse\",\n    files: \"files\",\n    removeFile: \"remove file\"\n  },\n  modal: {\n    closeButtonAriaLabel: \"Close modal\",\n    contentStart: \"Beginning of Modal Content\",\n    contentBox: \"Scrollable Modal Body\",\n    contentEnd: \"End of Modal Content\"\n  },\n  navigation: {\n    navigationElement: \"navigation\",\n    navigationLabel: \"navigation menu\",\n    navigationAbridgedText: \"View abridged menu\",\n    navigationUnabridgedText: \"View unabridged menu\"\n  },\n  password: {\n    showButtonAriaLabel: \"Show password\",\n    hideButtonAriaLabel: \"Hide password\"\n  },\n  progress: {\n    loading: \"Loading\",\n    looping: \"Loading\"\n  },\n  treeview: {\n    loading: \"Loading\"\n  }\n};\n\nclass i {\n  static get keys() {\n    return 0 === Object.keys(e.state.i18nRegistry).length && (e.state.i18nRegistry = { ...n,\n      ...e.state.i18nRegistry\n    }), { ...n,\n      ...e.state.i18nRegistry\n    };\n  }\n\n  static localize(i) {\n    e.state.i18nRegistry = { ...n,\n      ...e.state.i18nRegistry,\n      ...i\n    };\n  }\n\n}\n\nexport { i as I18nService, n as componentStringsDefault }; //# sourceMappingURL=i18n.service.js.map","map":null,"metadata":{},"sourceType":"module"}