{"ast":null,"code":"import { property as e } from \"lit/decorators/property.js\";\nimport { GlobalStateService as t } from \"../services/global.service.js\";\nimport { I18nService as n } from \"../services/i18n.service.js\";\n\nfunction i() {\n  return (i, s) => {\n    const r = i.connectedCallback,\n          c = i.disconnectedCallback;\n    i.connectedCallback = function () {\n      i.__i18nSub = t.stateUpdates.subscribe(e => {\n        \"i18nRegistry\" === e.key && this.requestUpdate(s);\n      }), r && r.apply(this);\n    }, i.disconnectedCallback = function () {\n      i.__i18nSub.unsubscribe(), c && c.apply(this);\n    };\n    const o = {\n      get() {\n        return { ...n.keys[this.__i18nKey],\n          ...this.__i18n\n        };\n      },\n\n      set(e) {\n        this.__i18nKey = Object.keys(n.keys).find(t => n.keys[t] === e), this.__i18nKey || (this.__i18n = e);\n      },\n\n      enumerable: !0,\n      configurable: !0\n    };\n    return void 0 !== s ? function (t, n, i) {\n      const s = Object.defineProperty(n, i, t);\n      return e({\n        type: Object,\n        attribute: \"cds-i18n\"\n      })(s, i);\n    }(o, i, s) : function (t, n) {\n      const i = {\n        kind: \"method\",\n        placement: \"prototype\",\n        key: n.key,\n        descriptor: t\n      };\n      return e({\n        type: Object\n      })(i);\n    }(o, i);\n  };\n}\n\nexport { i as i18n }; //# sourceMappingURL=i18n.js.map","map":null,"metadata":{},"sourceType":"module"}