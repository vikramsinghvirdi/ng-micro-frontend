{"ast":null,"code":"import { ReactiveElement as t } from \"@lit/reactive-element\";\nexport * from \"@lit/reactive-element\";\nimport { render as e, noChange as i } from \"lit-html\";\nexport * from \"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nvar l, o;\nconst r = t;\n\nclass s extends t {\n  constructor() {\n    super(...arguments), this.renderOptions = {\n      host: this\n    }, this._$Do = void 0;\n  }\n\n  createRenderRoot() {\n    var t, e;\n    const i = super.createRenderRoot();\n    return null !== (t = (e = this.renderOptions).renderBefore) && void 0 !== t || (e.renderBefore = i.firstChild), i;\n  }\n\n  update(t) {\n    const i = this.render();\n    this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t), this._$Do = e(i, this.renderRoot, this.renderOptions);\n  }\n\n  connectedCallback() {\n    var t;\n    super.connectedCallback(), null === (t = this._$Do) || void 0 === t || t.setConnected(!0);\n  }\n\n  disconnectedCallback() {\n    var t;\n    super.disconnectedCallback(), null === (t = this._$Do) || void 0 === t || t.setConnected(!1);\n  }\n\n  render() {\n    return i;\n  }\n\n}\n\ns.finalized = !0, s._$litElement$ = !0, null === (l = globalThis.litElementHydrateSupport) || void 0 === l || l.call(globalThis, {\n  LitElement: s\n});\nconst n = globalThis.litElementPolyfillSupport;\nnull == n || n({\n  LitElement: s\n});\nconst h = {\n  _$AK: (t, e, i) => {\n    t._$AK(e, i);\n  },\n  _$AL: t => t._$AL\n};\n(null !== (o = globalThis.litElementVersions) && void 0 !== o ? o : globalThis.litElementVersions = []).push(\"3.2.2\");\nexport { s as LitElement, r as UpdatingElement, h as _$LE }; //# sourceMappingURL=lit-element.js.map","map":null,"metadata":{},"sourceType":"module"}