{"ast":null,"code":"import t from \"ramda/es/includes.js\";\nimport e from \"ramda/es/without.js\";\nimport { isStringAndNotNilOrEmpty as n } from \"./identity.js\";\n\nfunction r(t) {\n  switch (t.tagName.toLowerCase()) {\n    case \"input\":\n    case \"button\":\n    case \"select\":\n    case \"textarea\":\n    case \"object\":\n      return !0;\n\n    case \"a\":\n    case \"area\":\n      return t.hasAttribute(\"href\");\n\n    case \"audio\":\n    case \"video\":\n      return t.hasAttribute(\"controls\");\n\n    default:\n      return t.hasAttribute(\"tabindex\");\n  }\n}\n\nfunction i(t, e = \"px\") {\n  return t && t.getBoundingClientRect ? t.getBoundingClientRect().width + e : \"\";\n}\n\nfunction o(t, e) {\n  return e ? \"\" : i(t);\n}\n\nfunction u(t) {\n  return !!t && t instanceof HTMLElement;\n}\n\nfunction c(t, e) {\n  return !!t && t.hasAttribute(e) && n(t.getAttribute(e));\n}\n\nfunction a(t, e, n) {\n  const [r, i] = e;\n  n() ? s(t, [r, i]) : f(t, r);\n}\n\nfunction s(t, ...e) {\n  t && e.forEach(([e, n]) => {\n    !1 === n || null === n ? t.removeAttribute(e) : t.setAttribute(e, n + \"\");\n  });\n}\n\nfunction f(t, ...e) {\n  t && e.forEach(e => {\n    t.removeAttribute(e);\n  });\n}\n\nfunction l(e, n, r) {\n  if (e) {\n    const i = e.getAttribute(n);\n    i ? t(r, i.split(\" \")) || e.setAttribute(n, i + \" \" + r) : e.setAttribute(n, r);\n  }\n}\n\nfunction d(t, n, r) {\n  if (t) {\n    const i = t.getAttribute(n);\n\n    if (i) {\n      const o = e([r], i.split(\" \")).join(\" \");\n      o ? t.setAttribute(n, o) : t.removeAttribute(n);\n    }\n  }\n}\n\nfunction b(...t) {\n  t.forEach(t => {\n    const [e, n] = t;\n    e && s(e, [\"slot\", n]);\n  });\n}\n\nfunction m(t, e, n) {\n  const r = new MutationObserver(r => {\n    r.find(t => t.attributeName === e) && n(t.getAttribute(e));\n  });\n  return r.observe(t, {\n    attributes: !0\n  }), r;\n}\n\nfunction h(t) {\n  return !!t && (null == t ? void 0 : t.offsetHeight) > 0 && !1 === (null == t ? void 0 : t.hasAttribute(\"hidden\"));\n}\n\nfunction A(t) {\n  Array.from(t).filter(t => t.textContent && t.textContent.trim().length > 0 && 3 === t.nodeType && t.parentElement).forEach(t => {\n    const e = document.createElement(\"span\");\n    t.after(e), e.appendChild(t);\n  });\n}\n\nfunction p(t, e) {\n  var n;\n  return e && (t.querySelector(e) || (null === (n = null == t ? void 0 : t.shadowRoot) || void 0 === n ? void 0 : n.querySelector(e))) || null;\n}\n\nfunction v(t) {\n  return null != t && \"\" + t != \"false\";\n}\n\nexport { l as addAttributeValue, b as assignSlotNames, v as coerceBooleanProperty, i as getElementWidth, o as getElementWidthUnless, c as hasAttributeAndIsNotEmpty, r as isFocusable, u as isHTMLElement, h as isVisible, m as listenForAttributeChange, p as queryChildFromLightOrShadowDom, d as removeAttributeValue, f as removeAttributes, s as setAttributes, a as setOrRemoveAttribute, A as spanWrapper }; //# sourceMappingURL=dom.js.map","map":null,"metadata":{},"sourceType":"module"}