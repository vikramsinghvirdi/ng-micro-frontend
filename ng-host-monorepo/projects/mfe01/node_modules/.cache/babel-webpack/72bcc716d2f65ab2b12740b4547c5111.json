{"ast":null,"code":"class e {\n  constructor(e, t) {\n    this.target = e, this.eventName = t;\n  }\n\n  emit(e, t) {\n    this.target.dispatchEvent(new CustomEvent(this.eventName, {\n      detail: e,\n      ...t\n    }));\n  }\n\n}\n\nfunction t() {\n  return (t, n) => {\n    const r = {\n      get() {\n        return new e(this, void 0 !== n ? n : t.key);\n      },\n\n      enumerable: !0,\n      configurable: !0\n    };\n    return void 0 !== n ? function (e, t, n) {\n      Object.defineProperty(t, n, e);\n    }(r, t, n) : function (e, t) {\n      return {\n        kind: \"method\",\n        placement: \"prototype\",\n        key: t.key,\n        descriptor: e\n      };\n    }(r, t);\n  };\n}\n\nexport { e as EventEmitter, t as event }; //# sourceMappingURL=event.js.map","map":null,"metadata":{},"sourceType":"module"}