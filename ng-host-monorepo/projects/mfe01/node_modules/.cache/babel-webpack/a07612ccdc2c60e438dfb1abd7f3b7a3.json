{"ast":null,"code":"function e(e, t) {\n  const n = new ResizeObserver(() => {\n    window.requestAnimationFrame(() => t());\n  });\n  return n.observe(e), n.__testTrigger = t, n;\n}\n\nfunction t(e, t) {\n  const n = new IntersectionObserver(e => {\n    !0 === e[0].isIntersecting && t();\n  }, {\n    threshold: [0]\n  });\n  return n.observe(e), n;\n}\n\nfunction n(t, n, o) {\n  return e(t, () => {\n    t.responsive && function (e, t) {\n      return e.updateComplete.then(() => {\n        const n = e.layout;\n        return e.layout = t.layouts[0], t.layouts.reduce((n, o) => n.then(() => {\n          if (e.layout === t.initialLayout) return o;\n          {\n            const t = e.layout;\n            return e.layout = o, e.updateComplete.then(() => (e.layout = e.layoutStable ? e.layout : t, o));\n          }\n        }), Promise.resolve(t.layouts[0])).then(() => n !== e.layout);\n      });\n    }(t, n).then(e => {\n      e && o();\n    });\n  });\n}\n\nexport { e as elementResize, t as elementVisible, n as updateComponentLayout }; //# sourceMappingURL=responsive.js.map","map":null,"metadata":{},"sourceType":"module"}