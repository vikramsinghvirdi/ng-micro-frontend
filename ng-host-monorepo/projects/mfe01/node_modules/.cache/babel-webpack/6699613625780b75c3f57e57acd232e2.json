{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e = (e, t, o) => {\n  Object.defineProperty(t, o, e);\n},\n      t = (e, t) => ({\n  kind: \"method\",\n  placement: \"prototype\",\n  key: t.key,\n  descriptor: e\n}),\n      o = ({\n  finisher: e,\n  descriptor: t\n}) => (o, n) => {\n  var r;\n\n  if (void 0 === n) {\n    const n = null !== (r = o.originalKey) && void 0 !== r ? r : o.key,\n          i = null != t ? {\n      kind: \"method\",\n      placement: \"prototype\",\n      key: n,\n      descriptor: t(o.key)\n    } : { ...o,\n      key: n\n    };\n    return null != e && (i.finisher = function (t) {\n      e(t, n);\n    }), i;\n  }\n\n  {\n    const r = o.constructor;\n    void 0 !== t && Object.defineProperty(o, n, t(n)), null == e || e(r, n);\n  }\n};\n\nexport { o as decorateProperty, e as legacyPrototypeMethod, t as standardPrototypeMethod }; //# sourceMappingURL=base.js.map","map":null,"metadata":{},"sourceType":"module"}