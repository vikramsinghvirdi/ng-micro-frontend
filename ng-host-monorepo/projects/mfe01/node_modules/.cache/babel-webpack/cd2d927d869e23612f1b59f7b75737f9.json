{"ast":null,"code":"import { listenForAttributeChange as t } from \"./dom.js\";\nimport { isJestTest as e } from \"./environment.js\";\n\nfunction r(t) {\n  t.preventDefault(), t.stopPropagation();\n}\n\nconst o = (r, o, n) => {\n  r.hasAttribute(o) ? n(r.getAttribute(o)) : void 0 !== r[o] && n(r[o]), !r._valueTracker || \"checked\" !== o && \"value\" !== o || (r._valueTracker = null);\n  const c = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(r), o);\n  return c && !e() && Object.defineProperty(r, o, {\n    get: c.get,\n    set: t => {\n      n(t), c.set.call(r, t);\n    }\n  }), t(r, o, t => n(t));\n};\n\nexport { o as getElementUpdates, r as stopEvent }; //# sourceMappingURL=events.js.map","map":null,"metadata":{},"sourceType":"module"}