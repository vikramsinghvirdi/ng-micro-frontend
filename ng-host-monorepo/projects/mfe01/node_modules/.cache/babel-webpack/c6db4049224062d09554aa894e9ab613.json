{"ast":null,"code":"import { KeyCodeService as t } from \"../services/keycodes.service.js\";\n\nfunction e(e, n) {\n  return t.getCode(n) === e.key;\n}\n\nfunction n(t, n, r) {\n  e(n, t) && r();\n}\n\nfunction r(t, n, r) {\n  t.filter(t => e(n, t)).length > 0 && r();\n}\n\nfunction c(t, n, r) {\n  (function (t, e) {\n    const n = u(t);\n    return 0 === n.length || n.reduce((t, n) => t && function (t, e) {\n      switch (e) {\n        case \"ctrl\":\n          return t.ctrlKey;\n\n        case \"alt\":\n          return t.altKey;\n\n        case \"shift\":\n          return t.shiftKey;\n\n        case \"cmd\":\n        case \"win\":\n        case \"meta\":\n          return t.metaKey;\n\n        default:\n          return !1;\n      }\n    }(e, n), !0);\n  })(t, n) && function (t, n) {\n    const r = s(t);\n    return 0 === r.length || r.reduce((t, r) => t && e(n, r), !0);\n  }(t, n) && r();\n}\n\nconst i = [\"ctrl\", \"alt\", \"shift\", \"meta\", \"cmd\", \"win\"];\n\nfunction u(t) {\n  return t.split(\"+\").filter(t => i.indexOf(t) > -1);\n}\n\nfunction s(t) {\n  return t.split(\"+\").filter(t => i.indexOf(t) < 0);\n}\n\nexport { u as getModifierKeysFromKeyCombo, e as keyWasEvented, r as onAnyKey, n as onKey, c as onKeyCombo, s as removeModifierKeysFromKeyCombo }; //# sourceMappingURL=keycodes.js.map","map":null,"metadata":{},"sourceType":"module"}