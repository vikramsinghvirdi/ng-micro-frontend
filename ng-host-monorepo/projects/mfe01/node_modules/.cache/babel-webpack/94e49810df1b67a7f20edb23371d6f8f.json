{"ast":null,"code":"import { __decorate as t } from \"tslib\";\nimport { html as e } from \"lit\";\nimport { isBrowser as o, setAttributes as i, CdsBaseButton as n, baseStyles as s, property as c } from \"@cds/core/internal\";\nimport { ClarityIcons as r } from \"@cds/core/icon/icon.service.js\";\nimport { timesIcon as d } from \"@cds/core/icon/shapes/times.js\";\nimport p from \"./close-button.element.scss.js\";\nconst l = \"cds-internal-close-button\";\n\nfunction m(t, e, n) {\n  if (o() && t) {\n    const o = document.createElement(\"cds-internal-close-button\");\n    e && e.length > 0 && i(o, ...e), n && o.addEventListener(\"click\", n.bind(t)), t.appendChild(o);\n  }\n}\n\nfunction a(t) {\n  if (o() && t) {\n    const e = t.querySelector(\"cds-internal-close-button\");\n    e && t.removeChild(e);\n  }\n}\n\nclass h extends n {\n  constructor() {\n    super();\n    this.iconSize = \"18\", this.iconShape = \"times\", r.addIcons(d);\n  }\n\n  render() {\n    return e`<div class=\"private-host\"><cds-icon shape=\"${this.iconShape}\" size=\"${this.iconSize}\"></cds-icon></div>`;\n  }\n\n  static get styles() {\n    return [s, p];\n  }\n\n}\n\nt([c({\n  type: String\n})], h.prototype, \"iconSize\", void 0), t([c({\n  type: String\n})], h.prototype, \"iconShape\", void 0);\nexport { l as CdsCloseButtonTagName, h as CdsInternalCloseButton, m as appendCloseButton, a as removeCloseButton }; //# sourceMappingURL=close-button.element.js.map","map":null,"metadata":{},"sourceType":"module"}